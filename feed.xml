<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://yehya-farhat.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://yehya-farhat.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-09-18T06:19:08+00:00</updated><id>https://yehya-farhat.github.io/feed.xml</id><title type="html">blank</title><subtitle>Personal Website; Machine Learning, Combinatorial Optimization, Yehya Farhat. </subtitle><entry><title type="html">What are the machines learning?</title><link href="https://yehya-farhat.github.io/blog/2023/MLmodels/" rel="alternate" type="text/html" title="What are the machines learning?"/><published>2023-09-17T15:09:00+00:00</published><updated>2023-09-17T15:09:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2023/MLmodels</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2023/MLmodels/"><![CDATA[<style>.image-container{height:200px;overflow:hidden}.image-container img{width:100%;height:100%;object-fit:cover}</style> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <div class="image-container"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/robotimghands-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/robotimghands-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/robotimghands-1400.webp"/> <img src="/assets/img/robotimghands.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="col-sm mt-3 mt-md-0"> <div class="image-container"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/mathfuncs-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/mathfuncs-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/mathfuncs-1400.webp"/> <img src="/assets/img/mathfuncs.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> <p><br/></p> <p> With the recent surge of AI models, from Chatgpt to Googles latest search embedded generative AI, This technology is here stay. Looking ahead, AI systems will be industry staples. A standard tool used by every company, home, and individual. Akin to the ubiquity of computers today. AI prompting skills will probably be the next Microsoft office skills you see required in every day job postings. With the speed this technology is moving its essential to take a step back and look at what these models actually are and why they're so useful ! </p> <h2 id="the-domain-of-ai">The domain of AI</h2> <p> Before delving into the world of AI, it's crucial to establish clarity in our terminology. The terms Machine Learning (ML), Artificial Intelligence (AI), and Deep Learning are often used interchangeably, leading to confusion. In essence, AI serves as an umbrella term, akin to "Biology," which encompasses a wide range of subdomains and techniques. AI is often employed as a buzzword for securing funding, but it signifies a broad and multifaceted field. Within the realm of AI, Machine Learning stands out as its crown jewel. Machine Learning itself comprises a diverse array of techniques, each with its own unique characteristics and applications. One of the most renowned and potent branches of Machine Learning is Deep Learning, also known as neural networks. Deep Learning techniques have gained widespread recognition for their ability to handle complex tasks and are at the forefront of many AI breakthroughs. <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/AIdomain-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/AIdomain-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/AIdomain-1400.webp"/> <img src="/assets/img/AIdomain.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> Here's a nice image to visualize this hierarchy, machine learning encompasses a multitude of techniques: Decision Trees, Linear regression, Support Vector Machine (SVM), and deep learning (just to name a few). deep learning is a field of its own as its one of the most successful ML algorithms. You will find a lot of variation there, from convolutional neural networks (Imaging) to Transformers (Language). But essentially everything i just named falls under the same umbrella term; ML. But how do ML models work and what are these algorithms doing? </p> <p><br/></p> <h2 id="what-does-linear-regression-and-deep-neural-networks-have-in-common">What does Linear regression and Deep Neural Networks have in common?</h2> <p>Spoiler, Linear Regression and Deep Neural Networks are both Machine learning algorithms.<br/> But what does something you might have studied in high school have to do with the architecture behind Chatgpt? Essentially these two algorithms are trying to do exactly the same thing, just in very different ways.</p> <p>The goal behind both these techniques, and every other ML technique you will come across is that they’re all trying to estimate (“Learn”) a mapping of the given dataset, or in other words they’re trying to find the function \(f(x)\) that describes your data. More formally, given the input data \(X\) and the output data \(Y\) find me an \(f(X)\) that best describes that mapping. The more data points you provide, the better your estimate.</p> <p>Thats it! that is literally all these models are doing. Well okay, theres a lot more that goes into it, but on a high level that is all you need to know. Its essence is a statistical technique, give me a bunch of points and ill try and find you the best function that describes/maps the data points.</p> <p>I will not be diving into how linear regression or neural networks work. those are very long topics that deserve their own posts, and frankly you will find endless resources about them online. We will simply look into what they do without diving into all the technical details of “how” they do it. Hopefully by the end of this post i hope to demonstrate why these techniques are very useful and why they’re being used in every domain right now.</p> <p>Lets have a quick refresher of what mathematical functions are.</p> <h4>Functions</h4> <p>Here’s the definition of a function i shamelessly stole from wikipedia. <br/> In mathematics, a function from a set \(X\) to a set \(Y\) assigns to each element of \(X\) one element of \(Y\). The set of \(X\) is called the domain of the function and the set \(Y\) is called the codomain or range of the function.</p> <p>So in layman terms, you can think of a function as a sort of machine. You give it a certain input, \(x\) it does some manipulation to the given input and spits out an output \(y\). Its also good to note that almost all of scientific theories are built upon functions. From quantum mechanical descriptions to tumor growth rates.</p> <p>Heres an example of a simple function: \(f(x) = x^2\) <br/> Whatever number you give this function it will multiply it by itself and give you the corresponding answer \(2 \rightarrow f(2) \rightarrow 4\) <br/></p> <p>Functions are usually derived via empirical observations or mathematically from some set of rules. Einstein for example, derived his famous \(E=mc^2\) equation by stabilizing the speed of light and voilà! You now have a function to describe the relation between mass and energy. You plug in a value for the mass and you will in turn get a value of the energy or if you want to go the opposite way, you plug in energy and you will get the mass.</p> <p>But as we said you can also derive equations purely based on empirical observation (and some intuition of course). If you want to Model population growth, you look at your data and come up with an equation that best describes the population data you have at hand. This technique is usually a bit harder, because it involves a lot more of trial and error and is prone to biased estimation of the sample data you have at hand (foreshadowing much?) That is not to say that deriving equations is easier, theres a lot of trial and error there too and those theories are also biased is their own way. We don’t need to look too far, take Newtons work on gravity. His equations could not describe pluto’s orbit or the bending of light due to gravitational affect, Newton simply did not have that data available to test his theory and had to make due with an apple and a moon.</p> <h4>Find me the functions</h4> <p>Here, lets try to derive an equations from empirical observation . I will give you a bunch if points, find the Function (Pattern)!</p> <table> <thead> <tr> <th>\(X\)</th> <th style="text-align: center">\(Y\)</th> <th> </th> </tr> </thead> <tbody> <tr> <td>1</td> <td style="text-align: center">1</td> <td> </td> </tr> <tr> <td>2</td> <td style="text-align: center">8</td> <td> </td> </tr> <tr> <td>3</td> <td style="text-align: center">27</td> <td> </td> </tr> <tr> <td>4</td> <td style="text-align: center">64</td> <td> </td> </tr> <tr> <td>\(\vdots\)</td> <td style="text-align: center">\(\vdots\)</td> <td><br/></td> </tr> </tbody> </table> <p>You probably guessed it, the function is \(f(x) = x^3\), you simply multiply the number by itself three times.</p> <p>Good, let’s complicate our example. This time, our function takes two positive inputs. To simplify matters, we’ll set the second input (\(Z\)) as a constant value. This function may remind you of something you encountered in high school physics. Your task is to work with this function with the constant Z and determine the relationship between the two variables that best describes it.</p> <table> <thead> <tr> <th>\(X;Z\)</th> <th style="text-align: center">\(Y\)</th> </tr> </thead> <tbody> <tr> <td>1 ; 9.8</td> <td style="text-align: center">9.8</td> </tr> <tr> <td>10 ; 9.8</td> <td style="text-align: center">98</td> </tr> <tr> <td>4 ; 9.8</td> <td style="text-align: center">39.2</td> </tr> <tr> <td>7 ; 9.8</td> <td style="text-align: center">68.6</td> </tr> <tr> <td>\(\vdots\)</td> <td style="text-align: center">\(\vdots\)</td> </tr> </tbody> </table> <p>This was also a straight giveaway from the first input. You multiply the two numbers together. looks a bit like Newtons second law, no? \(F=ma\). Just set “a” to 9.8 (acceleration of Earth’s gravity).</p> <p>I’ve been providing relatively straightforward examples so far, with inputs given in a specific order and corner cases to aid in deduction. Now, let’s consider a different scenario. I’ll present a function that takes positive inputs, but this time, the data isn’t sorted, and I won’t offer any obvious hints. Your challenge is to determine the function that most accurately represents this data.</p> <table> <thead> <tr> <th>\(X;Z\)</th> <th style="text-align: center">\(Y\)</th> </tr> </thead> <tbody> <tr> <td>7 ; 2</td> <td style="text-align: center">7.82</td> </tr> <tr> <td>3 ; 9</td> <td style="text-align: center">9.42</td> </tr> <tr> <td>5 ; 6</td> <td style="text-align: center">7.81</td> </tr> <tr> <td>4 ; 8</td> <td style="text-align: center">8.94</td> </tr> <tr> <td>2 ; 2</td> <td style="text-align: center">2.83</td> </tr> <tr> <td>10 ; 15</td> <td style="text-align: center">18.03</td> </tr> <tr> <td>8 ; 9</td> <td style="text-align: center">12.04</td> </tr> <tr> <td>3 ; 7</td> <td style="text-align: center">7.62</td> </tr> <tr> <td>\(\vdots\)</td> <td style="text-align: center">\(\vdots\)</td> </tr> </tbody> </table> <p>If you found this then i salute you, If you didn’t i don’t blame you. This function would have taken some time to find. The function in question is the famous pythagorean theorem. \(x^2 + z^2 = y^2\)<br/></p> <p>The exercises I’ve presented so far were merely illustrative examples. None of these functions necessarily had to be derived in this particular manner. However, consider what happens when we encounter a scenario where we genuinely need to do this. What if we possess a dataset of a specific function but lack any insight into the actual function itself? You can appreciate how challenging this can become for us, ordinary humans.<br/></p> <p>Let’s explore a real-life situation where this challenge is indeed applicable: image classification! Here’s the scenario: can you provide me with a function that takes as input an image containing either a cat or a dog and outputs either 0, to signify a cat, or 1, to denote a dog? An image is essentially represented mathematically as an array that encodes pixel values. However, you don’t need to focus on the technical details of this representation. The critical point here is that our function takes an input matrix, denoted as A, which describes the pixel content of the image.</p> <p>For clarity, let’s consider \(A_1\) as the matrix representing a dog image and \(A_0\) as the matrix representing a cat image. Your task is to provide the function that best captures the relationship between these input matrices to distinguish between cat and dog images accurately.</p> <table> <thead> <tr> <th>\(X\)</th> <th style="text-align: center">\(Y\)</th> </tr> </thead> <tbody> <tr> <td>\(A_0\)</td> <td style="text-align: center">0</td> </tr> <tr> <td>\(A_1\)</td> <td style="text-align: center">1</td> </tr> </tbody> </table> <p>This is already getting into the realm of impossibility and its even more challenging when we consider that we’ve only had to deal with two inputs and two outputs. Now, picture the complexity of classifying ten different animals, each captured from slightly different angles. <br/></p> <p>This is where the value of ML models truly shines. Each ML model offers a unique representation of the underlying function. For example, deep neural networks discover weight matrices, while K-Means Clustering identifies points in a hypergraph. Regardless of the specific technique, these models perform numerous calculations that would likely have taken you years to do yourself to manually derive arbitrary set of representations to effectively describe the data.</p> <p>Where do you see this technology going?</p>]]></content><author><name></name></author><category term="MachineLearning"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[What are machine learning models actually learning, and why are they so useful?]]></summary></entry><entry><title type="html">What is Machine Learning and what are the machines learning exactly?</title><link href="https://yehya-farhat.github.io/blog/2023/neuralNets/" rel="alternate" type="text/html" title="What is Machine Learning and what are the machines learning exactly?"/><published>2023-08-28T15:09:00+00:00</published><updated>2023-08-28T15:09:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2023/neuralNets</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2023/neuralNets/"><![CDATA[<p> With the recent surge of AI models, from Chatgpt to Googles latest search embedded generative AI, This technology is here stay. Looking ahead, AI systems will be insdustry staples. A standard tool used by every company, home, and individual. Akin to the ubiquity of computers today. AI promting skills will probably be the next Microsoft office skills you see required in every day job postings. With speed this technology is moving its essential to take a step back and look at what these models actaully are ! </p> <h2 id="the-domain-of-ai">The domain of AI</h2> <p> The first step before diving into the realm of AI is clarifying our terminology. The terms Machine learning (ML), AI, and deep learning are very fuzzy words and are used interchanegably. Essentially AI a nice word for garnering funding and is a broadest term you can use, its like saying "Biology". The field of AI rests on the bedrock domain known as Machine Learning, which in its own right encompasses a diverse array of techniques, the most famous and powerful being deep learning a.k.a neural networks. <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/AIdomain-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/AIdomain-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/AIdomain-1400.webp"/> <img src="/assets/img/AIdomain.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> Here's a nice image to visualize this hierarchy, machine learning encompasses a multitude of techniques: Decision Trees, Linear regression, Support Vector Machine (SVM), and deep learning (just to name a few). deep learning is a field of its own as its one of the most succesful ML algorithms, you will find a lot of variation there, from Convolutional neural networks (Imaging) to Transformers (Language). But essentially everything i just named here falls under the same umberalla, ML. </p> <p><br/></p> <h2 id="what-does-linear-regression-and-neural-networks-have-in-common">What does Linear regression and Neural Networks have in common?</h2> <p>So what does linear regression, something you might have studied in high school have to do with the algorithm behind Chatgpt, neural networks? Essentially these two algorithms are trying to do exactly the same thing, just in very different ways.</p> <p>The goal behind both these techniques, and every other ML technique you will come across is that they’re all trying to estimate (“Learn”) a mapping of the given dataset. More formaly, given the input data \(x\) and the ouput data \(y\) find me an \(f(x)\) that best describes that mapping. The more data points you provide, the better your estimate.</p> <p>Thats it! that is literally all these models are doing. Well okay, theres a lot more that goes into it, but on a high level that is all you need to know. Its essence is a statistical technique, give me a bunch of points and ill find you the best fuction that describes/maps the data points.</p> <p>Lets have a quick refresher of what mathematical functions are so we can look at what linear regression and neural network are both doing. I will not be diving into how linear regression or neural networks work. those are very long topics that deserve their own posts, and frankly you will find endless resources about them online. We will simply look into what they do without diving into all the technical details of “how” they do it.</p> <h4>Functions</h4> <p>Here’s the defintions of a function i shamelessly stole from wikipedia. <br/> In mathematics, a function from a set \(X\) to a set \(Y\) assigns to each element of \(X\) one element of \(Y\). The set of \(X\) is called the domain of the function and the set \(Y\) is called the codomain or range of the function.</p> <p>So in layman terms, you can think of a function as a sort of machine. You give it a certain input, \(x\) it does some manipulation to the given input and spits out an output \(y\). Its also nice to note that almost all of scientific theories are built upon functions. From quantum mechanical descriptions to tumor growth rates.</p> <p>Heres an example of a simple function: \(f(x) = x^2\) <br/> Whatever number you give this function it will multiply it by itself and give you the corresponding answer \(2 \rightarrow f(2) \rightarrow 4\) <br/></p> <p>Functions are usually derived via empirical observations or mathematically from some set of rules. Enstien for example, derived his famous \(E=mc^2\) equation by stabilizing the speed of light and voilà! You now have a function to describe the relation between mass and energy. You plug in a value for the mass and you will in turn get a value of the energy or if you want to go the opposite way, you plug in energy and you will get the mass.</p> <p>But as we said you can also derive equations purely based on empirical observation (and some initution of course). Modelling population growth for example, you look at your data and come up with an equation that best describes the population data you have at hand. This technique is usally a bit harder, because it involves a lot more of trial and error and is prone to biased estimation of the sample data you have at hand (foreshadowing much?) That is not to say that deriving equations is easier, theres a lot of trial and error there too and those theories are also biased is their own way. We dont need to look too far, take Newtons work on gravity. His equations could not describe plutos orbit or the bending of light due to gravitational affect. Newton simply did not have that data available to him and had to make due with an apple and a moon.</p> <p>Here, lets try to do a similar task ourselves. I will give you a bunch if points, find the Function (Pattern)!</p> <table> <thead> <tr> <th>\(X\)</th> <th style="text-align: center">\(Y\)</th> <th> </th> </tr> </thead> <tbody> <tr> <td>1</td> <td style="text-align: center">1</td> <td> </td> </tr> <tr> <td>2</td> <td style="text-align: center">8</td> <td> </td> </tr> <tr> <td>3</td> <td style="text-align: center">27</td> <td> </td> </tr> <tr> <td>4</td> <td style="text-align: center">64</td> <td> </td> </tr> <tr> <td>\(\vdots\)</td> <td style="text-align: center">\(\vdots\)</td> <td><br/></td> </tr> </tbody> </table> <p>You probably guessed it, the function is \(f(x) = x^3\), you simply multiply the number by itself three times.</p> <p>Good, lets complicate the example a bit more now. now are function takes in two inputs instead of one. Hint: you probably saw this function in highschool physics. We will set the second input as constant just to make it easy.</p> <table> <thead> <tr> <th>\(X;Z\)</th> <th style="text-align: center">\(Y\)</th> </tr> </thead> <tbody> <tr> <td>1 ; 9.8</td> <td style="text-align: center">9.8</td> </tr> <tr> <td>10 ; 9.8</td> <td style="text-align: center">98</td> </tr> <tr> <td>4 ; 9.8</td> <td style="text-align: center">39.2</td> </tr> <tr> <td>7 ; 9.8</td> <td style="text-align: center">68.6</td> </tr> <tr> <td>\(\vdots\)</td> <td style="text-align: center">\(\vdots\)</td> </tr> </tbody> </table> <p>This was also a straight giveaway from the first input. You multiply the two numners by themselves. looks a bit like Newtons second law, no? \(F=ma\). Just set “a” to 9.8 (Earths gravity)</p> <p>But what</p> <h4>Linear Regression</h4>]]></content><author><name></name></author><category term="MachineLearning"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[What does a machine learning model do really? how and what is it learning?]]></summary></entry><entry><title type="html">a post with table of contents on a sidebar</title><link href="https://yehya-farhat.github.io/blog/2023/sidebar-table-of-contents/" rel="alternate" type="text/html" title="a post with table of contents on a sidebar"/><published>2023-04-25T14:14:00+00:00</published><updated>2023-04-25T14:14:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2023/sidebar-table-of-contents</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2023/sidebar-table-of-contents/"><![CDATA[<p>This post shows how to add a table of contents as a sidebar.</p> <h2 id="adding-a-table-of-contents">Adding a Table of Contents</h2> <p>To add a table of contents to a post as a sidebar, simply add</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">toc</span><span class="pi">:</span>
  <span class="na">sidebar</span><span class="pi">:</span> <span class="s">left</span>
</code></pre></div></div> <p>to the front matter of the post. The table of contents will be automatically generated from the headings in the post. If you wish to display the sidebar to the right, simply change <code class="language-plaintext highlighter-rouge">left</code> to <code class="language-plaintext highlighter-rouge">right</code>.</p> <h3 id="example-of-sub-heading-1">Example of Sub-Heading 1</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-1">Example of another Sub-Heading 1</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h2 data-toc-text="Customizing" id="customizing-your-table-of-contents">Customizing Your Table of Contents</h2> <p>If you want to learn more about how to customize the table of contents of your sidebar, you can check the <a href="https://afeld.github.io/bootstrap-toc/">bootstrap-toc</a> documentation. Notice that you can even customize the text of the heading that will be displayed on the sidebar.</p> <h3 id="example-of-sub-heading-2">Example of Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-2">Example of another Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="toc"/><category term="sidebar"/><summary type="html"><![CDATA[an example of a blog post with table of contents on a sidebar]]></summary></entry><entry><title type="html">a post with table of contents</title><link href="https://yehya-farhat.github.io/blog/2023/table-of-contents/" rel="alternate" type="text/html" title="a post with table of contents"/><published>2023-03-20T15:59:00+00:00</published><updated>2023-03-20T15:59:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2023/table-of-contents</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2023/table-of-contents/"><![CDATA[<p>This post shows how to add a table of contents in the beginning of the post.</p> <h2 id="adding-a-table-of-contents">Adding a Table of Contents</h2> <p>To add a table of contents to a post, simply add</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">toc</span><span class="pi">:</span>
  <span class="na">beginning</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <p>to the front matter of the post. The table of contents will be automatically generated from the headings in the post.</p> <h3 id="example-of-sub-heading-1">Example of Sub-Heading 1</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-1">Example of another Sub-Heading 1</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h2 id="table-of-contents-options">Table of Contents Options</h2> <p>If you want to learn more about how to customize the table of contents, you can check the <a href="https://github.com/toshimaru/jekyll-toc">jekyll-toc</a> repository.</p> <h3 id="example-of-sub-heading-2">Example of Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-2">Example of another Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="toc"/><summary type="html"><![CDATA[an example of a blog post with table of contents]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://yehya-farhat.github.io/blog/2021/diagrams/" rel="alternate" type="text/html" title="a post with diagrams"/><published>2021-07-04T17:39:00+00:00</published><updated>2021-07-04T17:39:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2021/diagrams</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2021/diagrams/"><![CDATA[<p>This theme supports generating various diagrams from a text description using <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> plugin. Below, we generate a few examples of such diagrams using languages such as <a href="https://mermaid-js.github.io/mermaid/" target="\_blank">mermaid</a>, <a href="https://plantuml.com/" target="\_blank">plantuml</a>, <a href="https://vega.github.io/vega-lite/" target="\_blank">vega-lite</a>, etc.</p> <p><strong>Note:</strong> different diagram-generation packages require external dependencies to be installed on your machine. Also, be mindful of that because of diagram generation the fist time you build your Jekyll website after adding new diagrams will be SLOW. For any other details, please refer to <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> README.</p> <h2 id="mermaid">Mermaid</h2> <p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div> <p>The diagram below was generated by the following code:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div> <div class="jekyll-diagrams diagrams mermaid"> <svg id="mermaid-1695017963706" width="100%" xmlns="http://www.w3.org/2000/svg" height="100%" style="max-width:450px;" viewBox="-50 -10 450 231"><style>#mermaid-1695017963706 .label{font-family:trebuchet ms,verdana,arial;color:#333}#mermaid-1695017963706 .node circle,#mermaid-1695017963706 .node ellipse,#mermaid-1695017963706 .node polygon,#mermaid-1695017963706 .node rect{fill:#ececff;stroke:#9370db;stroke-width:1px}#mermaid-1695017963706 .node.clickable{cursor:pointer}#mermaid-1695017963706 .arrowheadPath{fill:#333}#mermaid-1695017963706 .edgePath .path{stroke:#333;stroke-width:1.5px}#mermaid-1695017963706 .edgeLabel{background-color:#e8e8e8}#mermaid-1695017963706 .cluster rect{fill:#ffffde!important;stroke:#aa3!important;stroke-width:1px!important}#mermaid-1695017963706 .cluster text{fill:#333}#mermaid-1695017963706 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:trebuchet ms,verdana,arial;font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}#mermaid-1695017963706 .actor{stroke:#ccf;fill:#ececff}#mermaid-1695017963706 text.actor{fill:#000;stroke:none}#mermaid-1695017963706 .actor-line{stroke:grey}#mermaid-1695017963706 .messageLine0{marker-end:"url(#arrowhead)"}#mermaid-1695017963706 .messageLine0,#mermaid-1695017963706 .messageLine1{stroke-width:1.5;stroke-dasharray:"2 2";stroke:#333}#mermaid-1695017963706 #arrowhead{fill:#333}#mermaid-1695017963706 #crosshead path{fill:#333!important;stroke:#333!important}#mermaid-1695017963706 .messageText{fill:#333;stroke:none}#mermaid-1695017963706 .labelBox{stroke:#ccf;fill:#ececff}#mermaid-1695017963706 .labelText,#mermaid-1695017963706 .loopText{fill:#000;stroke:none}#mermaid-1695017963706 .loopLine{stroke-width:2;stroke-dasharray:"2 2";marker-end:"url(#arrowhead)";stroke:#ccf}#mermaid-1695017963706 .note{stroke:#aa3;fill:#fff5ad}#mermaid-1695017963706 .noteText{fill:#000;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:14px}#mermaid-1695017963706 .section{stroke:none;opacity:.2}#mermaid-1695017963706 .section0{fill:rgba(102,102,255,.49)}#mermaid-1695017963706 .section2{fill:#fff400}#mermaid-1695017963706 .section1,#mermaid-1695017963706 .section3{fill:#fff;opacity:.2}#mermaid-1695017963706 .sectionTitle0,#mermaid-1695017963706 .sectionTitle1,#mermaid-1695017963706 .sectionTitle2,#mermaid-1695017963706 .sectionTitle3{fill:#333}#mermaid-1695017963706 .sectionTitle{text-anchor:start;font-size:11px;text-height:14px}#mermaid-1695017963706 .grid .tick{stroke:#d3d3d3;opacity:.3;shape-rendering:crispEdges}#mermaid-1695017963706 .grid path{stroke-width:0}#mermaid-1695017963706 .today{fill:none;stroke:red;stroke-width:2px}#mermaid-1695017963706 .task{stroke-width:2}#mermaid-1695017963706 .taskText{text-anchor:middle;font-size:11px}#mermaid-1695017963706 .taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px}#mermaid-1695017963706 .taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}#mermaid-1695017963706 .taskText0,#mermaid-1695017963706 .taskText1,#mermaid-1695017963706 .taskText2,#mermaid-1695017963706 .taskText3{fill:#fff}#mermaid-1695017963706 .task0,#mermaid-1695017963706 .task1,#mermaid-1695017963706 .task2,#mermaid-1695017963706 .task3{fill:#8a90dd;stroke:#534fbc}#mermaid-1695017963706 .taskTextOutside0,#mermaid-1695017963706 .taskTextOutside1,#mermaid-1695017963706 .taskTextOutside2,#mermaid-1695017963706 .taskTextOutside3{fill:#000}#mermaid-1695017963706 .active0,#mermaid-1695017963706 .active1,#mermaid-1695017963706 .active2,#mermaid-1695017963706 .active3{fill:#bfc7ff;stroke:#534fbc}#mermaid-1695017963706 .activeText0,#mermaid-1695017963706 .activeText1,#mermaid-1695017963706 .activeText2,#mermaid-1695017963706 .activeText3{fill:#000!important}#mermaid-1695017963706 .done0,#mermaid-1695017963706 .done1,#mermaid-1695017963706 .done2,#mermaid-1695017963706 .done3{stroke:grey;fill:#d3d3d3;stroke-width:2}#mermaid-1695017963706 .doneText0,#mermaid-1695017963706 .doneText1,#mermaid-1695017963706 .doneText2,#mermaid-1695017963706 .doneText3{fill:#000!important}#mermaid-1695017963706 .crit0,#mermaid-1695017963706 .crit1,#mermaid-1695017963706 .crit2,#mermaid-1695017963706 .crit3{stroke:#f88;fill:red;stroke-width:2}#mermaid-1695017963706 .activeCrit0,#mermaid-1695017963706 .activeCrit1,#mermaid-1695017963706 .activeCrit2,#mermaid-1695017963706 .activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}#mermaid-1695017963706 .doneCrit0,#mermaid-1695017963706 .doneCrit1,#mermaid-1695017963706 .doneCrit2,#mermaid-1695017963706 .doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}#mermaid-1695017963706 .activeCritText0,#mermaid-1695017963706 .activeCritText1,#mermaid-1695017963706 .activeCritText2,#mermaid-1695017963706 .activeCritText3,#mermaid-1695017963706 .doneCritText0,#mermaid-1695017963706 .doneCritText1,#mermaid-1695017963706 .doneCritText2,#mermaid-1695017963706 .doneCritText3{fill:#000!important}#mermaid-1695017963706 .titleText{text-anchor:middle;font-size:18px;fill:#000}
#mermaid-1695017963706 g.classGroup text{fill:#9370db;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:10px}#mermaid-1695017963706 g.classGroup rect{fill:#ececff;stroke:#9370db}#mermaid-1695017963706 g.classGroup line{stroke:#9370db;stroke-width:1}#mermaid-1695017963706 .classLabel .box{stroke:none;stroke-width:0;fill:#ececff;opacity:.5}#mermaid-1695017963706 .classLabel .label{fill:#9370db;font-size:10px}#mermaid-1695017963706 .relation{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1695017963706 #compositionEnd,#mermaid-1695017963706 #compositionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1695017963706 #aggregationEnd,#mermaid-1695017963706 #aggregationStart{fill:#ececff;stroke:#9370db;stroke-width:1}#mermaid-1695017963706 #dependencyEnd,#mermaid-1695017963706 #dependencyStart,#mermaid-1695017963706 #extensionEnd,#mermaid-1695017963706 #extensionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1695017963706 .branch-label,#mermaid-1695017963706 .commit-id,#mermaid-1695017963706 .commit-msg{fill:#d3d3d3;color:#d3d3d3}</style><style>#mermaid-1695017963706{color:#000;font:normal normal 400 normal 16px / normal "Times New Roman"}</style><g></g><g><line id="actor0" x1="75" y1="5" x2="75" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="0" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><line id="actor1" x1="275" y1="5" x2="275" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="200" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g><defs><marker id="arrowhead" refX="5" refY="2" markerWidth="6" markerHeight="4" orient="auto"><path d="M 0,0 V 4 L6,2 Z"></path></marker></defs><defs><marker id="crosshead" markerWidth="15" markerHeight="8" orient="auto" refX="16" refY="4"><path fill="black" stroke="#000000" stroke-width="1px" d="M 9,2 V 6 L16,4 Z" style="stroke-dasharray: 0, 0;"></path><path fill="none" stroke="#000000" stroke-width="1px" d="M 0,1 L 6,7 M 6,1 L 0,7" style="stroke-dasharray: 0, 0;"></path></marker></defs><g><text x="175" y="93" class="messageText" style="text-anchor: middle;">Hello John, how are you?</text><line x1="275" y1="100" x2="75" y2="100" class="messageLine0" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="fill: none;"></line></g><g><text x="175" y="128" class="messageText" style="text-anchor: middle;">Great!</text><line x1="75" y1="135" x2="275" y2="135" class="messageLine1" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="stroke-dasharray: 3, 3; fill: none;"></line></g><g><rect x="0" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><rect x="200" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g></svg> </div>]]></content><author><name></name></author><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://yehya-farhat.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post"/><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2021/distill</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2021/distill/"><![CDATA[<h2 id="equations">Equations</h2> <p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\] <p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p> <hr/> <h2 id="citations">Citations</h2> <p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas.</p> <p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it.</p> <p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p> <hr/> <h2 id="footnotes">Footnotes</h2> <p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p> <hr/> <h2 id="code-blocks">Code Blocks</h2> <p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags. An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>. For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p> <d-code block="" language="javascript"> var x = 25; function(x) { return x * x; } </d-code> <p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look good in the dark mode. You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <hr/> <h2 id="interactive-plots">Interactive Plots</h2> <p>You can add interative plots using plotly + iframes :framed_picture:</p> <div class="l-page"> <iframe src="/assets/plotly/demo.html" frameborder="0" scrolling="no" height="500px" width="100%" style="border: 1px dashed grey;"></iframe> </div> <p>The plot must be generated separately and saved into an HTML file. To generate the plot that you see above, you can use the following code snippet:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
  <span class="sh">'</span><span class="s">https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv</span><span class="sh">'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">density_mapbox</span><span class="p">(</span>
  <span class="n">df</span><span class="p">,</span>
  <span class="n">lat</span><span class="o">=</span><span class="sh">'</span><span class="s">Latitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">lon</span><span class="o">=</span><span class="sh">'</span><span class="s">Longitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">z</span><span class="o">=</span><span class="sh">'</span><span class="s">Magnitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
  <span class="n">center</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
  <span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
  <span class="n">mapbox_style</span><span class="o">=</span><span class="sh">"</span><span class="s">stamen-terrain</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">write_html</span><span class="p">(</span><span class="sh">'</span><span class="s">assets/plotly/demo.html</span><span class="sh">'</span><span class="p">)</span></code></pre></figure> <hr/> <h2 id="details-boxes">Details boxes</h2> <p>Details boxes are collapsible boxes which hide additional information from the user. They can be added with the <code class="language-plaintext highlighter-rouge">details</code> liquid tag:</p> <details><summary>Click here to know more</summary> <p>Additional details, where math \(2x - 1\) and <code class="language-plaintext highlighter-rouge">code</code> is rendered correctly.</p> </details> <hr/> <h2 id="layouts">Layouts</h2> <p>The main text column is referred to as the body. It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p> <div class="fake-img l-body"> <p>.l-body</p> </div> <p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p> <div class="fake-img l-page"> <p>.l-page</p> </div> <p>All of these have an outset variant if you want to poke out from the body text a little bit. For instance:</p> <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> <p>Occasionally you’ll want to use the full browser width. For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>. You can also inset the element a little from the edge of the browser by using the inset variant.</p> <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> <p>The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p> <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> <hr/> <h2 id="other-typography">Other Typography?</h2> <p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p> <p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p> <p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p> <p>Strikethrough uses two tildes. <del>Scratch this.</del></p> <ol> <li>First ordered list item</li> <li>Another item ⋅⋅* Unordered sub-list.</li> <li>Actual numbers don’t matter, just that it’s a number ⋅⋅1. Ordered sub-list</li> <li>And another item.</li> </ol> <p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p> <p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅ ⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅ ⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> <ul> <li>Unordered list can use asterisks</li> <li>Or minuses</li> <li>Or pluses</li> </ul> <p><a href="https://www.google.com">I’m an inline-style link</a></p> <p><a href="https://www.google.com" title="Google's Homepage">I’m an inline-style link with title</a></p> <p><a href="https://www.mozilla.org">I’m a reference-style link</a></p> <p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p> <p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p> <p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p> <p>Here’s our logo (hover to see the title text):</p> <p>Inline-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"/></p> <p>Reference-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"/></p> <p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nf">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Python syntax highlighting</span><span class="sh">"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div> <p>Colons can be used to align columns.</p> <table> <thead> <tr> <th>Tables</th> <th style="text-align: center">Are</th> <th style="text-align: right">Cool</th> </tr> </thead> <tbody> <tr> <td>col 3 is</td> <td style="text-align: center">right-aligned</td> <td style="text-align: right">$1600</td> </tr> <tr> <td>col 2 is</td> <td style="text-align: center">centered</td> <td style="text-align: right">$12</td> </tr> <tr> <td>zebra stripes</td> <td style="text-align: center">are neat</td> <td style="text-align: right">$1</td> </tr> </tbody> </table> <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <table> <thead> <tr> <th>Markdown</th> <th>Less</th> <th>Pretty</th> </tr> </thead> <tbody> <tr> <td><em>Still</em></td> <td><code class="language-plaintext highlighter-rouge">renders</code></td> <td><strong>nicely</strong></td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> </tbody> </table> <blockquote> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> </blockquote> <p>Quote break.</p> <blockquote> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p> </blockquote> <p>Here’s a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p> <p>This line is also a separate paragraph, but… This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with twitter</title><link href="https://yehya-farhat.github.io/blog/2020/twitter/" rel="alternate" type="text/html" title="a post with twitter"/><published>2020-09-28T15:12:00+00:00</published><updated>2020-09-28T15:12:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2020/twitter</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2020/twitter/"><![CDATA[<p>A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc.</p> <h1 id="tweet">Tweet</h1> <p>An example of displaying a tweet:</p> <div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="sv" dir="ltr">jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API <a href="http://t.co/m4EIQPM9h4">http://t.co/m4EIQPM9h4</a></p>&mdash; RubyGems (@rubygems) <a href="https://twitter.com/rubygems/status/518821243320287232?ref_src=twsrc%5Etfw">October 5, 2014</a></blockquote> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </div> <h1 id="timeline">Timeline</h1> <p>An example of pulling from a timeline:</p> <div class="jekyll-twitter-plugin"><a class="twitter-timeline" data-width="500" data-tweet-limit="3" href="https://twitter.com/jekyllrb?ref_src=twsrc%5Etfw">Tweets by jekyllrb</a> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </div> <h1 id="additional-details">Additional Details</h1> <p>For more details on using the plugin visit: <a href="https://github.com/rob-murray/jekyll-twitter-plugin">jekyll-twitter-plugin</a></p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><category term="formatting"/><summary type="html"><![CDATA[an example of a blog post with twitter]]></summary></entry><entry><title type="html">a post with math</title><link href="https://yehya-farhat.github.io/blog/2015/math/" rel="alternate" type="text/html" title="a post with math"/><published>2015-10-20T15:12:00+00:00</published><updated>2015-10-20T15:12:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2015/math</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2015/math/"><![CDATA[<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2\] <p>You can also use <code class="language-plaintext highlighter-rouge">\begin{equation}...\end{equation}</code> instead of <code class="language-plaintext highlighter-rouge">$$</code> for display mode math. MathJax will automatically number equations:</p> <p>\begin{equation} \label{eq:cauchy-schwarz} \left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right) \end{equation}</p> <p>and by adding <code class="language-plaintext highlighter-rouge">\label{...}</code> inside the equation environment, we can now refer to the equation using <code class="language-plaintext highlighter-rouge">\eqref</code>.</p> <p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="math"/><summary type="html"><![CDATA[an example of a blog post with some math]]></summary></entry><entry><title type="html">a post with code</title><link href="https://yehya-farhat.github.io/blog/2015/code/" rel="alternate" type="text/html" title="a post with code"/><published>2015-07-15T15:09:00+00:00</published><updated>2015-07-15T15:09:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2015/code</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2015/code/"><![CDATA[<p>This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting. It supports more than 100 languages. This example is in C++. All you have to do is wrap your code in markdown code tags:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">c++
</span><span class="n">code</span> <span class="n">code</span> <span class="n">code</span>
<span class="p">```</span>
</code></pre></div></div> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p>For displaying code in a list item, you have to be aware of the indentation, as stated in this <a href="https://stackoverflow.com/questions/34987908/embed-a-code-block-in-a-list-item-with-proper-indentation-in-kramdown/38090598#38090598">Stackoverflow answer</a>. You must indent your code by <strong>(3 * bullet_indent_level)</strong> spaces. This is because kramdown (the markdown engine used by Jekyll) indentation for the code block in lists is determined by the column number of the first non-space character after the list item marker. For example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> We can put fenced code blocks inside nested bullets, too.
<span class="p">   1.</span> Like this:
      <span class="p">```</span><span class="nl">c
</span>      <span class="n">printf</span><span class="p">(</span><span class="s">"Hello, World!"</span><span class="p">);</span>
      <span class="p">```</span>
<span class="p">
   2.</span> The key is to indent your fenced block in the same line as the first character of the line.
</code></pre></div></div> <p>Which displays:</p> <ol> <li>We can put fenced code blocks inside nested bullets, too. <ol> <li>Like this: <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">printf</span><span class="p">(</span><span class="s">"Hello, World!"</span><span class="p">);</span>
</code></pre></div> </div> </li> <li>The key is to indent your fenced block in the same line as the first character of the line.</li> </ol> </li> </ol> <p>By default, it does not display line numbers. If you want to display line numbers for every code block, you can set <code class="language-plaintext highlighter-rouge">kramdown.syntax_highlighter_opts.block.line_numbers</code> to true in your <code class="language-plaintext highlighter-rouge">_config.yml</code> file.</p> <p>If you want to display line numbers for a specific code block, all you have to do is wrap your code in a liquid tag:</p> <p>{% highlight c++ linenos %} <br/> code code code <br/> {% endhighlight %}</p> <p>The keyword <code class="language-plaintext highlighter-rouge">linenos</code> triggers display of line numbers. Produces something like this:</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[an example of a blog post with some code]]></summary></entry><entry><title type="html">a post with images</title><link href="https://yehya-farhat.github.io/blog/2015/images/" rel="alternate" type="text/html" title="a post with images"/><published>2015-05-15T21:01:00+00:00</published><updated>2015-05-15T21:01:00+00:00</updated><id>https://yehya-farhat.github.io/blog/2015/images</id><content type="html" xml:base="https://yehya-farhat.github.io/blog/2015/images/"><![CDATA[<p>This is an example post with image galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/9-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/9-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/9-1400.webp"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/7-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/7-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/7-1400.webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all. </div> <p>Images can be made zoomable. Simply add <code class="language-plaintext highlighter-rouge">data-zoomable</code> to <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> tags that you want to make zoomable.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/8-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/8-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/8-1400.webp"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/10-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/10-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/10-1400.webp"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>The rest of the images in this post are all zoomable, arranged into different mini-galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/11-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/11-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/11-1400.webp"/> <img src="/assets/img/11.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/12-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/12-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/12-1400.webp"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/7-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/7-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/7-1400.webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what included images could look like]]></summary></entry></feed>